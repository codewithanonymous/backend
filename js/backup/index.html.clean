<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="theme-color" content="#FFFC00">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <title>Snapchat Clone - Login</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <style>
        :root {
            --primary: #FFFC00;
            --primary-dark: #FFD700;
            --dark: #1A1A1A;
            --light: #FFFFFF;
            --gray: #F3F4F6;
            --gray-dark: #6B7280;
            --shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            line-height: 1.6;
            color: #333;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        .container {
            width: 100%;
            max-width: 420px;
            margin: 0 auto;
        }

        .logo {
            text-align: center;
            margin-bottom: 30px;
        }

        .logo h1 {
            font-size: 2.2rem;
            font-weight: 700;
            background: linear-gradient(45deg, #FF416C, #FF4B2B);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 10px;
        }

        .logo p {
            color: var(--gray-dark);
            font-size: 0.95rem;
        }

        .card {
            background: var(--light);
            border-radius: 16px;
            box-shadow: var(--shadow);
            padding: 32px;
            margin-bottom: 20px;
            transition: var(--transition);
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.12);
        }

        .card h2 {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--dark);
            margin-bottom: 24px;
            text-align: center;
        }

        .form-group {
            margin-bottom: 20px;
            position: relative;
        }

        .form-group label {
            display: block;
            font-size: 0.875rem;
            font-weight: 500;
            color: var(--dark);
            margin-bottom: 8px;
        }

        .form-control {
            width: 100%;
            padding: 12px 16px;
            font-size: 1rem;
            font-family: 'Poppins', sans-serif;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            background-color: var(--gray);
            transition: var(--transition);
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(255, 252, 0, 0.2);
            background-color: var(--light);
        }

        .input-group {
            position: relative;
        }

        .input-group .toggle-password {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: var(--gray-dark);
            cursor: pointer;
            padding: 5px;
            transition: var(--transition);
        }

        .input-group .toggle-password:hover {
            color: var(--dark);
        }

        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 100%;
            padding: 14px 24px;
            font-size: 1rem;
            font-weight: 600;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: var(--transition);
            position: relative;
            overflow: hidden;
            z-index: 1;
        }

        .btn-primary {
            background: linear-gradient(45deg, #FF416C, #FF4B2B);
            color: white;
            box-shadow: 0 4px 15px rgba(255, 65, 108, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(255, 65, 108, 0.4);
        }

        .btn-primary:active {
            transform: translateY(0);
        }

        .btn-outline {
            background: transparent;
            border: 2px solid #e2e8f0;
            color: var(--dark);
        }

        .btn-outline:hover {
            background-color: var(--gray);
            border-color: var(--gray-dark);
        }

        .divider {
            display: flex;
            align-items: center;
            margin: 24px 0;
            color: var(--gray-dark);
            font-size: 0.875rem;
        }

        .divider::before,
        .divider::after {
            content: '';
            flex: 1;
            height: 1px;
            background-color: #e2e8f0;
            margin: 0 10px;
        }

        .text-center {
            text-align: center;
        }

        .text-sm {
            font-size: 0.875rem;
        }

        .text-muted {
            color: var(--gray-dark);
        }

        .mt-3 {
            margin-top: 12px;
        }

        .mb-4 {
            margin-bottom: 16px;
        }

        .link {
            color: #4F46E5;
            text-decoration: none;
            font-weight: 500;
            transition: var(--transition);
        }

        .link:hover {
            text-decoration: underline;
        }

        .password-requirements {
            font-size: 0.75rem;
            color: var(--gray-dark);
            margin-top: 4px;
        }

        .error-message {
            color: #EF4444;
            font-size: 0.875rem;
            margin-top: 4px;
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .success-message {
            color: #10B981;
            font-size: 0.875rem;
            margin-top: 4px;
            display: flex;
            align-items: center;
            gap: 4px;
            padding: 10px 15px;
            background-color: #ECFDF5;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .hidden {
            display: none;
        }

        /* Message styles */
        .message {
            padding: 12px 16px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 8px;
            animation: fadeIn 0.3s ease-out;
        }

        .message-success {
            background-color: #ECFDF5;
            color: #10B981;
            border: 1px solid #A7F3D0;
        }

        .message-error {
            background-color: #FEF2F2;
            color: #EF4444;
            border: 1px solid #FCA5A5;
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes slideInRight {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        /* Dark mode support */
        @media (prefers-color-scheme: dark) {
            body {
                background: #1a1a1a;
                color: #f3f4f6;
            }
            
            .card {
                background: #2d3748;
                color: #f3f4f6;
            }
            
            .form-control {
                background-color: #4a5568;
                border-color: #4a5568;
                color: #f3f4f6;
            }
            
            .form-control:focus {
                background-color: #4a5568;
                color: #f3f4f6;
            }
            
            .text-muted {
                color: #a0aec0;
            }
            
            .btn-outline {
                color: #f3f4f6;
                border-color: #4a5568;
            }
            
            .btn-outline:hover {
                background-color: #4a5568;
            }
        }

        /* Responsive adjustments */
        @media (max-width: 480px) {
            .container {
                padding: 0 16px;
            }
            
            .card {
                padding: 24px 20px;
            }
            
            .logo h1 {
                font-size: 1.8rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="logo">
            <h1>Snapchat Clone</h1>
            <p>Connect with friends and share moments</p>
        </div>

        <!-- Message Container for Alerts -->
        <div id="message-container"></div>

        <!-- Login Form -->
        <div class="card" id="login-card">
            <h2>Welcome Back</h2>
            <form id="login-form">
                <div class="form-group">
                    <label for="login-username">Username</label>
                    <input type="text" id="login-username" class="form-control" required>
                </div>
                <div class="form-group">
                    <div style="display: flex; justify-content: space-between; align-items: center;">
                        <label for="login-password">Password</label>
                        <a href="#" class="link text-sm">Forgot password?</a>
                    </div>
                    <div class="input-group">
                        <input type="password" id="login-password" class="form-control" required>
                        <button type="button" class="toggle-password" onclick="togglePasswordVisibility('login-password')">
                            <i class="far fa-eye"></i>
                        </button>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">
                    Log In
                </button>
            </form>
        </div>

        <div class="divider">or</div>

        <!-- Signup Form -->
        <div class="card" id="signup-card">
            <h2>Create Account</h2>
            <p class="text-center text-muted text-sm mb-4">Join our community today</p>
            
            <form id="signup-form">
                <div class="form-group">
                    <label for="signup-username">Username</label>
                    <input type="text" id="signup-username" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="signup-password">Password</label>
                    <div class="input-group">
                        <input type="password" id="signup-password" class="form-control" required minlength="6">
                        <button type="button" class="toggle-password" onclick="togglePasswordVisibility('signup-password')">
                            <i class="far fa-eye"></i>
                        </button>
                    </div>
                    <div class="password-requirements">
                        Must be at least 6 characters
                    </div>
                </div>
                <div class="form-group">
                    <label for="confirm-password">Confirm Password</label>
                    <div class="input-group">
                        <input type="password" id="confirm-password" class="form-control" required>
                        <button type="button" class="toggle-password" onclick="togglePasswordVisibility('confirm-password')">
                            <i class="far fa-eye"></i>
                        </button>
                    </div>
                    <div id="password-match-error" class="error-message hidden">
                        <i class="fas fa-exclamation-circle"></i> Passwords do not match
                    </div>
                </div>
                <button type="submit" class="btn btn-primary" id="signup-button">
                    Create Account
                </button>
            </form>
        </div>

        <div class="text-center mt-4">
            <p class="text-sm text-muted">
                By signing up, you agree to our 
                <a href="#" class="link">Terms</a> and 
                <a href="#" class="link">Privacy Policy</a>.
            </p>
        </div>
    </div>

    <script>
        // Toggle password visibility
        function togglePasswordVisibility(fieldId) {
            const passwordField = document.getElementById(fieldId);
            const icon = passwordField.nextElementSibling.querySelector('i');
            
            if (passwordField.type === 'password') {
                passwordField.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                passwordField.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        // Show message function
        function showMessage(message, isError = false) {
            const messageContainer = document.getElementById('message-container');
            messageContainer.innerHTML = `
                <div class="${isError ? 'error-message' : 'success-message'}">
                    ${isError ? '<i class="fas fa-exclamation-circle"></i>' : '<i class="fas fa-check-circle"></i>'}
                    ${message}
                </div>
            `;
            
            // Auto-hide after 5 seconds
            setTimeout(() => {
                messageContainer.innerHTML = '';
            }, 5000);
        }

        // Form submission handlers
        document.addEventListener('DOMContentLoaded', function() {
            // Password validation on input
            const signupPassword = document.getElementById('signup-password');
            const confirmPassword = document.getElementById('confirm-password');
            const passwordMatchError = document.getElementById('password-match-error');
            const signupButton = document.getElementById('signup-button');

            function validatePasswords() {
                if (signupPassword && confirmPassword && signupPassword.value !== confirmPassword.value) {
                    passwordMatchError.classList.remove('hidden');
                    signupButton.disabled = true;
                    signupButton.style.opacity = '0.7';
                    return false;
                } else {
                    passwordMatchError.classList.add('hidden');
                    signupButton.disabled = false;
                    signupButton.style.opacity = '1';
                    return true;
                }
            }

            if (signupPassword && confirmPassword) {
                signupPassword.addEventListener('input', validatePasswords);
                confirmPassword.addEventListener('input', validatePasswords);
            }

            // Login form submission
            const loginForm = document.getElementById('login-form');
            if (loginForm) {
                loginForm.addEventListener('submit', async function(e) {
                    e.preventDefault();
                    
                    const username = document.getElementById('login-username').value;
                    const password = document.getElementById('login-password').value;

                    try {
                        const response = await fetch('/api/auth/login', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ username, password })
                        });

                        const data = await response.json();

                        if (response.ok) {
                            showMessage('Login successful! Redirecting...');
                            window.location.href = '/feed.html';
                        } else {
                            showMessage(data.message || 'Login failed. Please try again.', true);
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        showMessage('An error occurred. Please try again.', true);
                    }
                });
            }

            // Signup form submission
            const signupForm = document.getElementById('signup-form');
            if (signupForm) {
                signupForm.addEventListener('submit', async function(e) {
                    e.preventDefault();
                    
                    if (!validatePasswords()) {
                        return;
                    }

                    const username = document.getElementById('signup-username').value;
                    const password = document.getElementById('signup-password').value;

                    try {
                        const response = await fetch('/api/auth/register', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ username, password })
                        });

                        const data = await response.json();

                        if (response.ok) {
                            showMessage('Account created successfully! Redirecting to login...');
                            setTimeout(() => {
                                window.location.href = '/login.html';
                            }, 2000);
                        } else {
                            showMessage(data.message || 'Signup failed. Please try again.', true);
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        showMessage('An error occurred. Please try again.', true);
                    }
                });
            }
        });
    </script>
</body>
</html>
